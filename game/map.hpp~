





#ifndef __MAP_HEAD__
#define __MAP_HEAD__


#include <string>
#include <vector>


namespace FlyMUD
{


  class Node
  {
  public:
    typedef enum __node_type__
      {
       NONE,
       BUILDING,
      } NodeType;

  private:
    ::std::string name;
    NodeType type = NONE;
    
  public:
    
    Node *up = NULL;
    Node *down = NULL;
    Node *left = NULL;
    Node *right = NULL;

    void(*arrive_event)(Node*) = [](){return;};    //到达事件
    void(*keyboard_event)(Node*) = [](){return;};  //键盘事件
    void(*enter_event)(Node*) = [](){return;};     //回车事件

    Node(::std::string &name,Node *up,Node *down,Node *left,Node *right);
    ~Node();

    ::std::string get_name(){return this->name;};

    void print();
  }

  

  class Map
  {
  private:
    
  public:
    Node *center;
    
    
    Map();
    ~Map();

    void print();
  }


    
  
  
};// namespace Fly






#endif // __MAP_HEAD__





